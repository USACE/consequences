name: Publish NuGet Packages

on:
  push:
    branches:
      - main
env:
  Project_Name: Consequences/Consequences.csproj

jobs:
  build-windows:
    runs-on: windows-latest


    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7

    - name: Setup .NET
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: '8.x' 

    - name: Create version number
      shell: bash
      run: |
        BRANCH=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
        BRANCH=$(echo $BRANCH | sed 's/[^a-zA-Z0-9]/-/g')
        VERSION="1.0.0-$BRANCH-$GITHUB_RUN_NUMBER"
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Build for Windows x64
      run: dotnet publish ${{ env.PROJECT_NAME }} -c Release -r win-x64 --self-contained -p:PublishAot=true

    - name: Pack NuGet packages
      run: dotnet pack ${{ env.PROJECT_NAME }} -c Release /p:PackageVersion=${{ env.VERSION }}

    - name: Publish NuGet packages to GitHub Packages
      run: dotnet nuget push **/*.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate

    - name: Upload Windows build artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-x64-${{ env.VERSION }}
        path: |
          "D:/a/consequences/consequences/Consequences/bin/Release/net8.0/win-x64/native/USACE.HEC.Consequences.dll"

    - name: List all files
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -File | ForEach-Object { Write-Output $_.FullName }

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7

    - name: Setup .NET
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: '8.x' 

    - name: Create version number
      id: create_version
      run: |
        BRANCH=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
        BRANCH=$(echo $BRANCH | sed 's/[^a-zA-Z0-9]/-/g')
        VERSION="1.0.0-$BRANCH-$GITHUB_RUN_NUMBER"
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Build for Linux x64
      run: dotnet publish ${{ env.PROJECT_NAME }} -c Release -r linux-x64 --self-contained -p:PublishAot=true

    - name: Pack NuGet packages
      run: dotnet pack ${{ env.PROJECT_NAME }} -c Release /p:PackageVersion=${{ env.VERSION }}

    - name: Publish NuGet packages to GitHub Packages
      run: dotnet nuget push **/*.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate

    - name: Upload Linux build artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-x64-${{ env.VERSION }}
        path: |
          "./Consequences/bin/Release/net8.0/linux-x64/native/"

    - name: List all files
      shell: bash
      run: |
        find . -type f -print

