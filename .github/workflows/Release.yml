name: Publish NuGet Packages

on:
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.x' # Adjust the .NET version as needed

    - name: Restore dependencies
      run: dotnet restore

    - name: Build for Windows x64
      run: dotnet publish -c Release -r win-x64 --self-contained -p:PublishAot=true

    - name: Create version number
      shell: pwsh
      run: |
        $TAG = $env:GITHUB_REF -replace 'refs/tags/', ''
        $VERSION = $TAG -replace '^v', ''
        $VERSION = "$VERSION.$env:GITHUB_RUN_NUMBER"
        echo "VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Pack NuGet packages
      run: dotnet pack -c Release /p:PackageVersion=${{ env.VERSION }}

    - name: Publish NuGet packages to GitHub Packages
      run: dotnet nuget push **/*.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate

    - name: Upload Windows build artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-x64-${{ env.VERSION }}
        path: |
          "**/bin/Release/net8.0/win-x64/native/"

    - name: Attach Windows artifact to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: "**/bin/Release/net8.0/win-x64/native/"
        asset_name: windows-x64-${{ env.VERSION }}.zip
        asset_content_type: application/zip

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.x' # Adjust the .NET version as needed

    - name: Restore dependencies
      run: dotnet restore

    - name: Build for Linux x64
      run: dotnet publish -c Release -r linux-x64 --self-contained -p:PublishAot=true

    - name: Create version number
      id: vars
      run: |
        TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
        VERSION=${TAG#v}
        echo "VERSION=${VERSION}.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

    - name: Pack NuGet packages
      run: dotnet pack -c Release /p:PackageVersion=${{ env.VERSION }}

    - name: Publish NuGet packages to GitHub Packages
      run: dotnet nuget push **/*.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate

    - name: Upload Linux build artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-x64-${{ env.VERSION }}
        path: |
          "**/bin/Release/net8.0/linux-x64/native/"

    - name: Attach Linux artifact to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: "**/bin/Release/net8.0/linux-x64/native/"
        asset_name: linux-x64-${{ env.VERSION }}.zip
        asset_content_type: application/zip